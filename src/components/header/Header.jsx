import "./headerStyle.css"
import { useState } from "react";
import Modal from "../modalWin/ModalWin";
import {Register, Authorization} from "../entrances/requests/Requests"
import {regUrl, authUrl} from "../../UrlsComponent"
import { useNavigate  } from "react-router-dom";

function Header(){

    const [isModal, setModal] = useState(false);
    const [isAuth, setAuth] = useState(true);
    const [login, setLogin] = useState("")
    const [email, setEmail] = useState("")
    const [psw, setPsw] = useState("")
    const [rpsw, setRpsw] = useState("")
    const navigate = useNavigate()

    let regContent = 
        <form className="modalFormReg">
            <input placeholder="Введите логин" className="modalField" onChange={(e) => {setLogin(e.target.value)}} value={login} type="text" autoComplete="on"/>
            <input placeholder="Введите e-mail" className="modalField" onChange={(e) => {setEmail(e.target.value)}} value={email} type="email" autoComplete="on"/>
            <input placeholder="Введите пароль" className="modalField" onChange={(e) => {setPsw(e.target.value)}} value={psw} type="password" autoComplete="on"/>
            <input placeholder="Повторите пароль" className="modalField" onChange={(e) => {setRpsw(e.target.value)}} value={rpsw} type="password" autoComplete="on"/> 
            <p className="rPsw">{psw === rpsw ? "" : "Пароли не совпадают"}</p>
            <button type="submit" className="modalBtn" onClick={(e) => handlerSubmit(e)}>Войти</button>
        </form>


    let authContent = 
        <form className="modalFormAuth">
            <input placeholder="Введите логин" className="modalField" onChange={(e) => {setLogin(e.target.value)}} value={login} type="text" autoComplete="on"/>
            <input placeholder="Введите пароль" className="modalField" onChange={(e) => {setPsw(e.target.value)}} value={psw} type="password" autoComplete="on"/>
            <button type="submit" className="modalBtn" onClick={(e) => handlerSubmit(e)}>Войти</button>
        </form>

    let regFooter = 
        <p className="noAccount">
            Уже есть аккаунт? <button className="noAccountBtn" onClick={() => {setAuth(true); setModal(true)}}>Войти</button>
        </p>

    let authFooter = 
        <p className="noAccount">
            Нет аккаунта? <button className="noAccountBtn"  onClick={() => {setAuth(false); setModal(true)}}>Зарегистрироваться</button>
        </p>


        const handlerSubmit = async(e) => {
            e.preventDefault()
            isAuth ?  await Authorization(login, psw, authUrl) :  await Register(login, email, psw, regUrl)
            setModal(false)
        }

    return(
        <div className="header">

            <div className="logo">
                <svg width="75" height="75" viewBox="0 0 75 75" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path opacity="0.898" fillRule="evenodd" clipRule="evenodd" d="M33.8379 11.3526C32.0829 8.38756 29.4706 7.0692 26.001 7.39747C23.4263 7.99185 21.5952 9.50551 20.5079 11.9385C19.423 15.4945 20.3262 18.4242 23.2178 20.7276C21.1931 26.7665 22.3162 32.1375 26.587 36.8408C23.5902 37.7473 20.9432 39.217 18.6461 41.25H21.2858C22.4059 40.431 23.6359 39.767 24.9756 39.2578C26.0114 38.8723 27.0368 38.5061 28.0518 38.1592C28.2358 38.1535 28.3823 38.2267 28.4913 38.3789C27.359 39.2271 26.3805 40.1841 25.5559 41.25H27.8097C28.4597 40.5684 29.1996 39.9288 30.0293 39.3311C34.9855 41.9123 39.8927 41.8635 44.751 39.1846C45.6699 39.8218 46.4828 40.5103 47.1895 41.25H49.4779C49.2568 40.9478 49.024 40.65 48.7793 40.3565C48.0783 39.532 47.2726 38.8484 46.3623 38.3057C49.0356 38.7339 51.4209 39.7153 53.5184 41.25H56.3129C56.1288 41.069 55.9369 40.8932 55.7373 40.7227C53.4056 39.0195 50.8664 37.7011 48.1202 36.7676C52.4092 32.0707 53.5323 26.6996 51.4893 20.6543C53.0076 19.5752 54.0085 18.1346 54.4922 16.333C55.1092 12.5132 53.7176 9.70563 50.3174 7.91017C46.2573 6.62628 43.1079 7.77375 40.8692 11.3526C38.5254 10.7666 36.1817 10.7666 33.8379 11.3526ZM56.5984 51.9643H41.9823C41.3485 52.3939 40.7334 52.9192 40.1368 53.5401C38.2109 56.1793 37.7715 59.0602 38.8184 62.1826L39.4776 63.501C38.0555 63.8644 36.6394 63.84 35.2295 63.4277C37.0675 59.9978 36.8477 56.7019 34.5704 53.5401C33.9811 52.9193 33.3713 52.394 32.7412 51.9643H18.1022C19.0973 52.6727 20.3631 53.0271 21.8995 53.0274C20.7427 54.1931 19.9858 55.5847 19.6289 57.2022C19.0383 61.5633 20.6741 64.7616 24.5362 66.7969C28.1171 68.1217 31.3153 67.5113 34.1309 64.9658C36.3342 65.5509 38.5314 65.5509 40.7227 64.9658C41.1989 65.5403 41.7604 66.0041 42.4073 66.3574C46.2201 68.2059 49.7114 67.742 52.8809 64.9658C56.1268 60.9563 56.1025 56.9767 52.8077 53.0274L54.712 52.8809C55.4284 52.6246 56.0572 52.3191 56.5984 51.9643ZM32.5196 12.8174C31.3676 10.0849 29.2924 8.81534 26.294 9.0088C24.8306 9.36323 23.6343 10.1445 22.7051 11.3526C20.858 14.8947 21.6392 17.7267 25.0489 19.8486C25.1466 20.0928 25.1466 20.3369 25.0489 20.5811C22.6289 27.1389 24.1181 32.632 29.5166 37.0606C34.3284 40.2046 39.2599 40.4 44.3116 37.6465C50.5011 33.2284 52.2589 27.4422 49.585 20.2881C49.6171 20.0775 49.6903 19.8822 49.8047 19.7022C50.631 19.1682 51.3635 18.5335 52.002 17.7979C53.7014 14.8008 53.2374 12.1884 50.6104 9.96095C46.7217 8.13228 43.8409 9.15767 41.9678 13.0371C40.4371 12.8683 38.899 12.6974 37.3536 12.5244C35.9936 12.6059 34.6508 12.8012 33.3252 13.1104C33.004 13.1358 32.7353 13.0382 32.5196 12.8174ZM38.8184 28.6377C39.3286 26.7796 38.6205 25.9006 36.6944 26.001C35.7865 26.4507 35.4203 27.1831 35.5957 28.1983C36.4827 29.7331 37.5569 29.8796 38.8184 28.6377ZM34.7901 58.96C34.3468 54.5622 31.9055 52.2673 27.4659 52.0752C22.7189 53.0914 20.6926 56.0211 21.3868 60.8643C22.453 64.0108 24.6503 65.6709 27.9786 65.8447C32.1418 65.4169 34.4123 63.1219 34.7901 58.96ZM53.5401 58.96C53.0946 54.5597 50.6532 52.2648 46.2159 52.0752C45.5936 52.2189 44.9589 52.3899 44.3116 52.5879C40.6172 54.3866 39.2746 57.2918 40.2832 61.3037C42.1486 65.1781 45.1515 66.5209 49.292 65.332C52.0275 64.086 53.4436 61.962 53.5401 58.96Z" fill="#B67B8E"/>
                    <path d="M14.9875 46.494C14.9875 46.8697 14.928 47.2115 14.809 47.5195C14.69 47.8275 14.522 48.0912 14.305 48.3105C14.088 48.5298 13.8267 48.7002 13.521 48.8215C13.2177 48.9405 12.8817 49 12.513 49H10.6405V43.9845H12.513C12.8817 43.9845 13.2177 44.0452 13.521 44.1665C13.8267 44.2855 14.088 44.4558 14.305 44.6775C14.522 44.8968 14.69 45.1605 14.809 45.4685C14.928 45.7765 14.9875 46.1183 14.9875 46.494ZM14.291 46.494C14.291 46.186 14.249 45.9107 14.165 45.668C14.081 45.4253 13.962 45.22 13.808 45.052C13.654 44.884 13.4673 44.7557 13.248 44.667C13.0287 44.5783 12.7837 44.534 12.513 44.534H11.3195V48.4505H12.513C12.7837 48.4505 13.0287 48.4062 13.248 48.3175C13.4673 48.2288 13.654 48.1017 13.808 47.936C13.962 47.768 14.081 47.5627 14.165 47.32C14.249 47.0773 14.291 46.802 14.291 46.494ZM19.1925 47.138L18.405 45.0975C18.3816 45.0368 18.3571 44.9668 18.3315 44.8875C18.3058 44.8058 18.2813 44.7195 18.258 44.6285C18.209 44.8175 18.1588 44.975 18.1075 45.101L17.32 47.138H19.1925ZM20.6065 49H20.0815C20.0208 49 19.9718 48.9848 19.9345 48.9545C19.8971 48.9242 19.8691 48.8857 19.8505 48.839L19.3815 47.628H17.131L16.662 48.839C16.648 48.881 16.6211 48.9183 16.5815 48.951C16.5418 48.9837 16.4928 49 16.4345 49H15.9095L17.915 43.9845H18.601L20.6065 49ZM23.3558 46.4135C23.5518 46.4135 23.7244 46.3902 23.8738 46.3435C24.0254 46.2945 24.1514 46.2268 24.2518 46.1405C24.3544 46.0518 24.4314 45.9468 24.4828 45.8255C24.5341 45.7042 24.5598 45.57 24.5598 45.423C24.5598 45.1243 24.4618 44.8992 24.2658 44.7475C24.0698 44.5958 23.7758 44.52 23.3838 44.52H22.6418V46.4135H23.3558ZM25.6728 49H25.0708C24.9471 49 24.8561 48.9522 24.7978 48.8565L23.4958 47.0645C23.4561 47.0085 23.4129 46.9688 23.3663 46.9455C23.3219 46.9198 23.2519 46.907 23.1563 46.907H22.6418V49H21.9663V43.9845H23.3838C23.7011 43.9845 23.9753 44.0172 24.2063 44.0825C24.4373 44.1455 24.6274 44.2377 24.7768 44.359C24.9284 44.4803 25.0404 44.6273 25.1128 44.8C25.1851 44.9703 25.2213 45.1617 25.2213 45.374C25.2213 45.5513 25.1933 45.717 25.1373 45.871C25.0813 46.025 24.9996 46.1638 24.8923 46.2875C24.7873 46.4088 24.6578 46.5127 24.5038 46.599C24.3521 46.6853 24.1794 46.7507 23.9858 46.795C24.0721 46.844 24.1468 46.9152 24.2098 47.0085L25.6728 49ZM27.734 49H27.055V43.9845H27.734V49ZM32.3804 47.138L31.5929 45.0975C31.5695 45.0368 31.545 44.9668 31.5194 44.8875C31.4937 44.8058 31.4692 44.7195 31.4459 44.6285C31.3969 44.8175 31.3467 44.975 31.2954 45.101L30.5079 47.138H32.3804ZM33.7944 49H33.2694C33.2087 49 33.1597 48.9848 33.1224 48.9545C33.085 48.9242 33.057 48.8857 33.0384 48.839L32.5694 47.628H30.3189L29.8499 48.839C29.8359 48.881 29.809 48.9183 29.7694 48.951C29.7297 48.9837 29.6807 49 29.6224 49H29.0974L31.1029 43.9845H31.7889L33.7944 49ZM39.2177 43.9845V49H38.8782C38.8245 49 38.779 48.9907 38.7417 48.972C38.7067 48.9533 38.6717 48.9218 38.6367 48.8775L35.7352 45.0975C35.7398 45.1558 35.7433 45.213 35.7457 45.269C35.748 45.325 35.7492 45.3775 35.7492 45.4265V49H35.1542V43.9845H35.5042C35.5345 43.9845 35.5602 43.9868 35.5812 43.9915C35.6022 43.9938 35.6208 43.9997 35.6372 44.009C35.6535 44.016 35.6698 44.0277 35.6862 44.044C35.7025 44.058 35.72 44.0767 35.7387 44.1L38.6402 47.8765C38.6355 47.8158 38.6308 47.7575 38.6262 47.7015C38.6238 47.6432 38.6227 47.5883 38.6227 47.537V43.9845H39.2177ZM43.8634 47.138L43.0759 45.0975C43.0525 45.0368 43.028 44.9668 43.0024 44.8875C42.9767 44.8058 42.9522 44.7195 42.9289 44.6285C42.8799 44.8175 42.8297 44.975 42.7784 45.101L41.9909 47.138H43.8634ZM45.2774 49H44.7524C44.6917 49 44.6427 48.9848 44.6054 48.9545C44.568 48.9242 44.54 48.8857 44.5214 48.839L44.0524 47.628H41.8019L41.3329 48.839C41.3189 48.881 41.292 48.9183 41.2524 48.951C41.2127 48.9837 41.1637 49 41.1054 49H40.5804L42.5859 43.9845H43.2719L45.2774 49ZM49.5365 44.555H47.9125V49H47.237V44.555H45.6095V43.9845H49.5365V44.555ZM55.3891 46.494C55.3891 46.8697 55.3296 47.215 55.2106 47.53C55.0916 47.8427 54.9236 48.1122 54.7066 48.3385C54.4896 48.5648 54.2283 48.741 53.9226 48.867C53.6193 48.9907 53.2833 49.0525 52.9146 49.0525C52.546 49.0525 52.21 48.9907 51.9066 48.867C51.6033 48.741 51.3431 48.5648 51.1261 48.3385C50.9091 48.1122 50.7411 47.8427 50.6221 47.53C50.5031 47.215 50.4436 46.8697 50.4436 46.494C50.4436 46.1183 50.5031 45.7742 50.6221 45.4615C50.7411 45.1465 50.9091 44.8758 51.1261 44.6495C51.3431 44.4208 51.6033 44.2435 51.9066 44.1175C52.21 43.9915 52.546 43.9285 52.9146 43.9285C53.2833 43.9285 53.6193 43.9915 53.9226 44.1175C54.2283 44.2435 54.4896 44.4208 54.7066 44.6495C54.9236 44.8758 55.0916 45.1465 55.2106 45.4615C55.3296 45.7742 55.3891 46.1183 55.3891 46.494ZM54.6926 46.494C54.6926 46.186 54.6506 45.9095 54.5666 45.6645C54.4826 45.4195 54.3636 45.213 54.2096 45.045C54.0556 44.8747 53.869 44.744 53.6496 44.653C53.4303 44.562 53.1853 44.5165 52.9146 44.5165C52.6463 44.5165 52.4025 44.562 52.1831 44.653C51.9638 44.744 51.776 44.8747 51.6196 45.045C51.4656 45.213 51.3466 45.4195 51.2626 45.6645C51.1786 45.9095 51.1366 46.186 51.1366 46.494C51.1366 46.802 51.1786 47.0785 51.2626 47.3235C51.3466 47.5662 51.4656 47.7727 51.6196 47.943C51.776 48.111 51.9638 48.2405 52.1831 48.3315C52.4025 48.4202 52.6463 48.4645 52.9146 48.4645C53.1853 48.4645 53.4303 48.4202 53.6496 48.3315C53.869 48.2405 54.0556 48.111 54.2096 47.943C54.3636 47.7727 54.4826 47.5662 54.5666 47.3235C54.6506 47.0785 54.6926 46.802 54.6926 46.494ZM58.677 47.0015V49H57.998V47.0015L56.1605 43.9845H56.7555C56.8162 43.9845 56.864 43.9997 56.899 44.03C56.934 44.058 56.9643 44.0953 56.99 44.142L58.138 46.0915C58.18 46.1732 58.2185 46.2502 58.2535 46.3225C58.2885 46.3925 58.3188 46.4637 58.3445 46.536C58.3702 46.4637 58.3993 46.3925 58.432 46.3225C58.4647 46.2502 58.5008 46.1732 58.5405 46.0915L59.685 44.142C59.706 44.1023 59.7352 44.0662 59.7725 44.0335C59.8098 44.0008 59.8577 43.9845 59.916 43.9845H60.5145L58.677 47.0015ZM64.2705 44.7685C64.2495 44.8035 64.2261 44.8303 64.2005 44.849C64.1771 44.8653 64.148 44.8735 64.113 44.8735C64.0733 44.8735 64.0266 44.8537 63.973 44.814C63.9193 44.7743 63.8516 44.7312 63.77 44.6845C63.6906 44.6355 63.5938 44.5912 63.4795 44.5515C63.3675 44.5118 63.231 44.492 63.07 44.492C62.9183 44.492 62.7841 44.513 62.6675 44.555C62.5531 44.5947 62.4563 44.6495 62.377 44.7195C62.3 44.7895 62.2416 44.8723 62.202 44.968C62.1623 45.0613 62.1425 45.1628 62.1425 45.2725C62.1425 45.4125 62.1763 45.5292 62.244 45.6225C62.314 45.7135 62.405 45.7917 62.517 45.857C62.6313 45.9223 62.7596 45.9795 62.902 46.0285C63.0466 46.0752 63.1936 46.1242 63.343 46.1755C63.4946 46.2268 63.6416 46.2852 63.784 46.3505C63.9286 46.4135 64.057 46.494 64.169 46.592C64.2833 46.69 64.3743 46.8102 64.442 46.9525C64.512 47.0948 64.547 47.2698 64.547 47.4775C64.547 47.6968 64.5096 47.9033 64.435 48.097C64.3603 48.2883 64.2506 48.4552 64.106 48.5975C63.9636 48.7398 63.7875 48.8518 63.5775 48.9335C63.3698 49.0152 63.133 49.056 62.867 49.056C62.5403 49.056 62.244 48.9977 61.978 48.881C61.712 48.762 61.4845 48.6022 61.2955 48.4015L61.4915 48.0795C61.5101 48.0538 61.5323 48.0328 61.558 48.0165C61.586 47.9978 61.6163 47.9885 61.649 47.9885C61.6793 47.9885 61.7131 48.0013 61.7505 48.027C61.7901 48.0503 61.8345 48.0807 61.8835 48.118C61.9325 48.1553 61.9885 48.1962 62.0515 48.2405C62.1145 48.2848 62.1856 48.3257 62.265 48.363C62.3466 48.4003 62.4388 48.4318 62.5415 48.4575C62.6441 48.4808 62.7596 48.4925 62.888 48.4925C63.049 48.4925 63.1925 48.4703 63.3185 48.426C63.4445 48.3817 63.5506 48.3198 63.637 48.2405C63.7256 48.1588 63.7933 48.062 63.84 47.95C63.8866 47.838 63.91 47.7132 63.91 47.5755C63.91 47.4238 63.875 47.3002 63.805 47.2045C63.7373 47.1065 63.6475 47.0248 63.5355 46.9595C63.4235 46.8942 63.2951 46.8393 63.1505 46.795C63.0058 46.7483 62.8588 46.7017 62.7095 46.655C62.5601 46.606 62.4131 46.55 62.2685 46.487C62.1238 46.424 61.9955 46.3423 61.8835 46.242C61.7715 46.1417 61.6805 46.0168 61.6105 45.8675C61.5428 45.7158 61.509 45.5292 61.509 45.3075C61.509 45.1302 61.5428 44.9587 61.6105 44.793C61.6805 44.6273 61.7808 44.4803 61.9115 44.352C62.0445 44.2237 62.2066 44.121 62.398 44.044C62.5916 43.967 62.8133 43.9285 63.063 43.9285C63.343 43.9285 63.5973 43.9728 63.826 44.0615C64.057 44.1502 64.26 44.2785 64.435 44.4465L64.2705 44.7685Z" fill="#B67B8E"/>
                    <path opacity="0.883" fillRule="evenodd" clipRule="evenodd" d="M31.7139 18.0908C33.8238 18.1266 35.0445 19.1764 35.376 21.2402C35.3298 22.1489 34.8904 22.4418 34.0576 22.1191C33.8202 21.5758 33.6004 21.0144 33.3984 20.4346C32.5195 19.6534 31.6406 19.6534 30.7617 20.4346C30.5597 21.0144 30.34 21.5758 30.1025 22.1191C29.6539 22.363 29.2389 22.2898 28.8574 21.8994C28.7241 19.8114 29.6763 18.542 31.7139 18.0908Z" fill="#B67B8E"/>
                    <path opacity="0.877" fillRule="evenodd" clipRule="evenodd" d="M42.1143 18.0908C44.6552 18.1166 45.8514 19.386 45.7031 21.8994C45.3488 22.3591 44.9336 22.4323 44.458 22.1191C44.2487 21.6227 44.0777 21.11 43.9453 20.5811C43.0176 19.6044 42.0898 19.6044 41.1621 20.5811C41.019 21.133 40.7993 21.6457 40.5029 22.1191C39.7219 22.435 39.2824 22.1665 39.1846 21.3135C39.408 19.5286 40.3846 18.4544 42.1143 18.0908Z" fill="#B67B8E"/>
                    <path opacity="0.899" fillRule="evenodd" clipRule="evenodd" d="M36.8408 24.2432C39.1718 24.2793 40.4902 25.4512 40.7959 27.7588C40.7287 28.7684 40.338 29.6228 39.624 30.3223C39.1875 30.6627 38.6993 30.8824 38.1592 30.9814C38.1349 31.7155 38.1593 32.4479 38.2324 33.1787C38.6988 34.3267 39.5045 34.6441 40.6494 34.1309C41.2308 33.6032 41.5481 32.944 41.6016 32.1533C42.3346 31.7225 42.8473 31.9179 43.1397 32.7393C42.7195 35.2334 41.2547 36.2833 38.7451 35.8887C38.1923 35.698 37.7284 35.3805 37.3535 34.9365C36.2823 36.1099 34.9882 36.4273 33.4717 35.8887C32.0323 35.1831 31.4221 34.0355 31.6406 32.4463C31.9758 31.9661 32.3908 31.8929 32.8857 32.2266C33.0583 32.9084 33.3513 33.5432 33.7647 34.1309C34.8396 34.7455 35.6941 34.5258 36.3281 33.4717C36.5169 32.6531 36.5902 31.823 36.5479 30.9814C34.4755 30.4052 33.6211 29.038 33.9844 26.8799C34.4043 25.4096 35.3565 24.5307 36.8408 24.2432ZM36.6943 26.001C35.7864 26.4507 35.4202 27.1831 35.5957 28.1982C36.4827 29.7331 37.5568 29.8796 38.8184 28.6377C39.3286 26.7795 38.6205 25.9006 36.6943 26.001Z" fill="#B67B8E"/>
                </svg>
            </div>

            <div className="mainList">
                <ul className="listContent">
                    <li className="listItem">Главная</li>
                    <li className="listItem" onClick={() => navigate("/")}>Товары</li>
                    <li className="listItem">О нас</li>
                </ul>
            </div>
            
                <div className="entrace">
                    {!localStorage.getItem("access") ? 
                        <ul className="listContent">
                            <li className="listItem" onClick={() => {setAuth(true); setModal(true)}}>Вход</li>
                            <li className="listItem"  onClick={() => {setAuth(false); setModal(true)}}>Регистрация</li>
                        </ul>
                                :
                        <div className="headerBusket" >
                            <svg width="16" height="20" viewBox="0 0 16 20" fill="none" xmlns="http://www.w3.org/2000/svg" className="headerBusketIcon" onClick={() => navigate("basket")}>
                                <path d="M2 20C1.45 20 0.979333 19.8043 0.588 19.413C0.196 19.021 0 18.55 0 18V6C0 5.45 0.196 4.97933 0.588 4.588C0.979333 4.196 1.45 4 2 4H4C4 2.9 4.39167 1.95833 5.175 1.175C5.95833 0.391667 6.9 0 8 0C9.1 0 10.0417 0.391667 10.825 1.175C11.6083 1.95833 12 2.9 12 4H14C14.55 4 15.021 4.196 15.413 4.588C15.8043 4.97933 16 5.45 16 6V18C16 18.55 15.8043 19.021 15.413 19.413C15.021 19.8043 14.55 20 14 20H2ZM2 18H14V6H12V8C12 8.28333 11.9043 8.52067 11.713 8.712C11.521 8.904 11.2833 9 11 9C10.7167 9 10.4793 8.904 10.288 8.712C10.096 8.52067 10 8.28333 10 8V6H6V8C6 8.28333 5.90433 8.52067 5.713 8.712C5.521 8.904 5.28333 9 5 9C4.71667 9 4.47933 8.904 4.288 8.712C4.096 8.52067 4 8.28333 4 8V6H2V18ZM6 4H10C10 3.45 9.80433 2.97933 9.413 2.588C9.021 2.196 8.55 2 8 2C7.45 2 6.97933 2.196 6.588 2.588C6.196 2.97933 6 3.45 6 4Z" fill="#1C1B1F"/>
                            </svg>
                            <p className="busketCounter">({localStorage.getItem("productsCounter")})</p>
                            <p>Log-out</p>
                            <p onClick={() => {navigate('/profile')}}>Profile</p>
                        </div>
                    }
                </div>


                <Modal
                    isVisible={isModal}
                    title={ isAuth ? "Авторизация" : "Регистрация"}
                    content={isAuth ? authContent : regContent}
                    footer={isAuth ? authFooter : regFooter}
                    onClose={() => setModal(false)}
                />

        </div>


    )
}

export default Header